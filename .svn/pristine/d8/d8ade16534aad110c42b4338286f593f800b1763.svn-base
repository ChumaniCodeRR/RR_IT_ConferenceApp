using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;

namespace ConferenceSys.ConferenceWardens
{
    public partial class MealsReport: Form
    {
        public MealsReport()
        {
            InitializeComponent();
        }

        private void Register_Load(object sender, EventArgs e)
        {
            // Set default conference
            if (ConferenceSys.Properties.Settings.Default.LastConference != "")
            {
                txt_conf_code.Text = ConferenceSys.Properties.Settings.Default.LastConference;
                validate_conference();
            }

            // Set default last change date and time
            if (ConferenceSys.Properties.Settings.Default.LastChangeDate.Year >= DateTime.Today.Year) nlb_tempdte.Value = ConferenceSys.Properties.Settings.Default.LastChangeDate;
            else nlb_tempdte.Value = null;
           

            DataRow newhall = Global.Global.ds_conf_codes.tt_conf_hall.NewRow();
            newhall["hall"] = "*";
            newhall["hallname"] = "All Halls";
            Global.Global.ds_conf_codes.tt_conf_hall.Rows.InsertAt(newhall, 0);
            bs_hall.DataSource = Global.Global.ds_conf_codes.tt_conf_hall;
            cb_hall.SelectedValue = ConferenceSys.Properties.Settings.Default.LastHall.ToString();


            bs_res.DataSource = Global.Global.ds_conf_codes.tt_conf_res;
            bs_building.DataSource = Global.Global.ds_conf_codes.TT_CONF_BUILDING;

            //disable_field();
            hall_changed();
         
        }

        private void cb_res_SelectedIndexChanged(object sender, EventArgs e)
        {
            res_changed();
        }

        //private void disable_field()
        //{
        //    if (rb_print_all.Checked == true)
        //    {
        //        nlb_tempdte.Value = null;
        //        txt_hours.Text = "";
        //        txt_min.Text = "";
        //        pnl_changes.Enabled = false;
        //    }

        //    else
        //    {
        //        pnl_changes.Enabled = true;
        //    }
         
        //}

        private void btn_search_conf_Click(object sender, EventArgs e)
        {
            SearchConference frm_search = new SearchConference();
            frm_search.ShowDialog();

            if (frm_search.conference != "")
            {
                txt_conf_code.Text = frm_search.conference;
                txt_conf_descrip.Text = frm_search.descrip;
            }
        }

        private void btn_print_Click(object sender, EventArgs e)
        {
            NS_Conference.StrongTypesNS.ds_registerDataSet ds_register = new NS_Conference.StrongTypesNS.ds_registerDataSet();
                      
            string TCONF = txt_conf_code.Text;
            string tempdate;
            string tmeal;
            string tempshall = "";
            string cbuilding = "";
            string feedback;
          
            if (nlb_tempdte.Value == null) tempdate = "?";
            else tempdate = ((DateTime)nlb_tempdte.Value).ToString("dd/MM/yyyy");

            tempshall = cb_hall.SelectedValue.ToString();
            if (tempshall == "*") cbuilding = "*";
            else
            {
                if (cb_res.SelectedValue.ToString() == "999") cbuilding = "*";
                else cbuilding = cb_buliding.SelectedValue.ToString();
            }

            if (rb_all.Checked == true) tmeal = "*";
            else if (rb_breakfast.Checked == true) tmeal = "B";
            else if (rb_lunch.Checked == true) tmeal = "L";
            else tmeal = "S";

            ds_register = Proxy.ConferenceSystem.meals_report(TCONF,tempdate,tmeal,tempshall,cbuilding, out feedback);
            if (feedback.Contains("Error")) 
            {
                MessageBox.Show(feedback, "Register Changes", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }
                  
            if (ds_register.tt_meals.Rows.Count > 0)
            {
                ConferenceSys.Properties.Settings.Default.LastConference = txt_conf_code.Text.ToString();
                if (nlb_tempdte.Value != null) ConferenceSys.Properties.Settings.Default.LastChangeDate = DateTime.Parse(nlb_tempdte.Value.ToString());
                ConferenceSys.Properties.Settings.Default.Save();
                
                string temptitle = feedback + " Meals Report";
                bool separate = false;
                string signcon = "true";
                Reports frm_report = new Reports("MealsReport",ds_register,temptitle,signcon,separate);
                frm_report.Show();

            }
            else MessageBox.Show("Your query returned no data to display","No Data",MessageBoxButtons.OK,MessageBoxIcon.Information);



        }

        //private void rb_print_all_CheckedChanged(object sender, EventArgs e)
        //{
        //    disable_field();
        //}

        private void cb_hall_SelectedIndexChanged(object sender, EventArgs e)
        {
            hall_changed();
        }

        private void hall_changed()
        {
            if (cb_hall.SelectedIndex == 0)
            {
                cb_res.Enabled = false;
                cb_buliding.Enabled = false;
            }
            else
            {
                cb_res.Enabled = true;
                cb_buliding.Enabled = true;
                DataView dv_res = new DataView(Global.Global.ds_conf_codes.tt_conf_res.Copy());
                dv_res.RowFilter = "hall = '" + cb_hall.SelectedValue.ToString() + "'";
                if (dv_res.Count > 1)
                {
                    bool Add = true;

                    for (int i = 0; i < Global.Global.ds_conf_codes.tt_conf_res.Rows.Count; i++)
                    {
                        if (Global.Global.ds_conf_codes.tt_conf_res[i].res == 999 &&
                            Global.Global.ds_conf_codes.tt_conf_res[i].hall == cb_hall.SelectedValue.ToString()) Add = false;
                    }

                    if (Add == true)
                    {
                        DataRow newres = Global.Global.ds_conf_codes.tt_conf_res.NewRow();
                        newres["res"] = 999;
                        newres["resname"] = "All Residences";
                        newres["hall"] = cb_hall.SelectedValue.ToString();
                        Global.Global.ds_conf_codes.tt_conf_res.Rows.InsertAt(newres, 0);
                    }

                    DataView dv_resall = new DataView(Global.Global.ds_conf_codes.tt_conf_res.Copy());
                    dv_resall.RowFilter = "hall = '" + cb_hall.SelectedValue.ToString() + "'";
                    bs_res.DataSource = dv_resall;
                    cb_res.SelectedIndex = 0;
                    
                 }
                 else bs_res.DataSource = dv_res;
              }
        }

        private void res_changed()
        {
            try
            {

                bool Add = true;

                if (cb_res.SelectedValue.ToString() != "999")
                {

                    cb_buliding.Enabled = true;
                    DataView dv_buildings = new DataView(Global.Global.ds_conf_codes.TT_CONF_BUILDING);
                    dv_buildings.RowFilter = "res = " + cb_res.SelectedValue.ToString();
                    if (dv_buildings.Count > 1)
                    {


                        for (int i = 0; i < Global.Global.ds_conf_codes.TT_CONF_BUILDING.Rows.Count; i++)
                        {
                            if (Global.Global.ds_conf_codes.TT_CONF_BUILDING[i].building == "*" &&
                                Global.Global.ds_conf_codes.TT_CONF_BUILDING[i].res == Int32.Parse(cb_res.SelectedValue.ToString())) Add = false;
                        }

                        if (Add == true)
                        {
                            DataRow newbuild = Global.Global.ds_conf_codes.TT_CONF_BUILDING.NewRow();
                            newbuild["building"] = "*";
                            newbuild["building_name"] = "All Buildings";
                            newbuild["res"] = Int32.Parse(cb_res.SelectedValue.ToString());
                            Global.Global.ds_conf_codes.TT_CONF_BUILDING.Rows.InsertAt(newbuild, 0);

                        }

                     

                    }
                    bs_building.DataSource = dv_buildings;
                    if (dv_buildings.Count > 1) cb_buliding.SelectedIndex = 0;
                }
                else
                {
                    cb_buliding.Enabled = false;

                }

            }
            catch (Exception ex)
            {
                Utilities.Utils.HandleException(Utilities.ExceptionSource.ConferenceSystem, ex);
            }
        }

        private void validate_conference()
        {
            if (txt_conf_code.Text != "")
            {
                string feedback = Proxy.ConferenceSystem.validate_conference(txt_conf_code.Text);
                if (!feedback.Contains("Error")) txt_conf_descrip.Text = feedback;
                else
                {
                    MessageBox.Show(feedback, "Error Conference", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    txt_conf_code.Text = "";
                    txt_conf_descrip.Text = "";
                    txt_conf_code.Focus();
                }
            }

        }

        private void txt_conf_code_Leave(object sender, EventArgs e)
        {
            validate_conference();
        }

        private void txt_conf_code_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                validate_conference();
            }
        }
        
    }
}
